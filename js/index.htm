<!DOCTYPE html>

<html lang="en" xmlns="//www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title></title>
    <script type="text/javascript" src="./LercCodec.js"></script>
</head>
<body>
    <div id="imageInfo">Image Header Info</div>
    <div id="currentPV">Hover over to see current pixel value</div>
    <input id="mapUrl" type="text" style="width:90%" value="//elevation3d.arcgis.com/arcgis/rest/services/WorldElevation3D/Terrain3D/ImageServer/tile/0/0/0" onchange="showTile()">
    <div>
        <canvas width="100" height="100" id="imageCanvas"></canvas>
    </div>
    <script>
        document.getElementById('mapUrl').onchange();

        function showTile() {
            var lerc = LERC();
            //UI elements
            var div_Info = document.getElementById("imageInfo");
            var div_CurrentPv = document.getElementById("currentPV");
            var imageCanvas = document.getElementById("imageCanvas");
            var canvasPos = imageCanvas.getBoundingClientRect();
            var context = imageCanvas.getContext("2d");
            var mapUrl = document.getElementById("mapUrl").value;
            //div_Header.innerHTML = "test";
            //if it fails you'll see the red
            context.fillStyle = 'red';
            context.fillRect(0, 0, 100, 100);
            //fetching lerc
            var xhr = new XMLHttpRequest();
            xhr.responseType = "arraybuffer";
            xhr.open("Get", mapUrl, true);
            xhr.send();
            var pixels, mask, min, max, height, width;
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var decodedPixelBlock = lerc.decode(xhr.response, { returnMask: true });
                    width = decodedPixelBlock.width;
                    height = decodedPixelBlock.height;
                    min = decodedPixelBlock.minValue;
                    max = decodedPixelBlock.maxValue;
                    pixels = decodedPixelBlock.pixelData;
                    mask = decodedPixelBlock.maskData;
                    imageCanvas.width = width;
                    imageCanvas.height = height;

                    var imageData = context.createImageData(width, height);
                    var data = imageData.data;
                    var f = 255 / (max - min);
                    var pv = 0;
                    var index = 0;
                    var nPixels = width * height;
                    //optimization for no mask case  (mid of most rasters)
                    if (mask) {
                        for (var i = 0; i < nPixels; i++) {
                            if (mask[i]) {
                                pv = (pixels[i] - min) * f;
                                data[i * 4] = pv;
                                data[i * 4 + 1] = pv;
                                data[i * 4 + 2] = pv;
                                data[i * 4 + 3] = 255;
                            }
                            else {
                                data[i * 4 + 3] = 0;
                            }
                        }
                    }
                    else {
                        for (var i = 0; i < nPixels; i++) {
                            pv = (pixels[i] - min) * f;
                            data[i * 4] = pv;
                            data[i * 4 + 1] = pv;
                            data[i * 4 + 2] = pv;
                            data[i * 4 + 3] = 255;
                        }
                    }
                    context.putImageData(imageData, 0, 0);
                    div_Info.innerHTML = "max: " + max + ", min: " + min + ", width: " + width + ", height: " + height;

                }
                imageCanvas.onmousemove = function (evt) {
                    if (!pixels) {
                        return;
                    }
                    var i = evt.clientX - canvasPos.left; //col
                    var j = evt.clientY - canvasPos.top; //row
                    var pos = j * width + i;
                    if (mask && mask[pos])
                        div_CurrentPv.innerHTML = "current pixel value: " + pixels[pos];
                    else
                        div_CurrentPv.innerHTML = "current pixel value: no data";
                }
            }
        }


    </script>
</body>
</html>
